name: integration

on:
  push:
    branches: 
      - main
      - Deployment
      - test-case
  pull_request:
    branches: 
      - main
      - Deployment
      - test-case

jobs:
  build:
    runs-on:
      - self-hosted
      - Windows
      - X64  # Matches your runner's labels

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    # Checkout the code
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Ensure full repo cloning for proper SonarQube analysis
    
    # Set up Node.js
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    # Install dependencies
    - name: Install Dependencies
      run: npm ci
    
    # Build the project
    - name: Build Project
      run: npm run build --if-present
    
    # Run tests
    - name: Run Tests
      run: npm test

    # Set up JAVA_HOME
    - name: Set JAVA_HOME
      run: |
        $env:JAVA_HOME = "C:\Program Files\Java\jdk-17"  # Adjust to the correct Java path on your system
        $env:Path += ";$env:JAVA_HOME\bin"
        java -version  # Verify Java installation

    # Set up SonarScanner path
    - name: Set SonarScanner Path
      run: |
        $env:SONAR_SCANNER_HOME = "${{ github.workspace }}\\src\\pages\\.vscode"
        $env:Path += ";$env:SONAR_SCANNER_HOME\\bin"
        Write-Host "SonarScanner path set to: $env:SONAR_SCANNER_HOME\\bin"
    
    # SonarQube Analysis using SonarScanner CLI
    - name: Run SonarScanner
      shell: cmd
      run: |
        src\pages\.vscode\bin\sonar-scanner.bat ^
          -Dsonar.projectKey=Group12-SOEN341_Project_F24 ^
          -Dsonar.projectName=Group12-SOEN341_Project_F24 ^
          -Dsonar.sources=. ^
          -Dsonar.exclusions=node_modules/**,dist/**,build/** ^
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info ^
          -Dsonar.sourceEncoding=UTF-8 ^
          -Dsonar.host.url=http://localhost:9000 ^
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
    # Prettier Formatting
    - name: Run Prettier
      run: npx prettier --check .

    # Lint with ESLint
    - name: Lint with ESLint
      run: npx eslint . --ext .js,.jsx --fix
